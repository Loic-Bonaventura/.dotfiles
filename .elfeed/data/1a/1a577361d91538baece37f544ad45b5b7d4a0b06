<!-- SC_OFF --><div class="md"><p>Today while cleaning my config (instead of working, ha!), I stumbled upon a very short allotment of lisp that has proven very useful for me and wanted to share it; It&#39;s a function that allows you to generate functions that have _run or raise_ behavior for buffers: (defun make-toggle-function (buffer-name buffer-create-fn &amp;optional switch-cont) &quot;Makes a toggle-function to have raise-or-create behaviour. Creates a toggle-function that executes BUFFER-CREATE-FN if a buffer named BUFFER-NAME doesn&#39;t exist, switches to the buffer named BUFFER-NAME if it exists, and switches to the previous buffer if we are currently visiting buffer BUFFER-NAME. The SWITCH-CONT argument is a function which, if given, is called after the buffer has been created or switched to. This allows running further actions that setup the state of the buffer or modify it.&quot; (lambda () (interactive) (let ((target-buf (get-buffer buffer-name))) (if target-buf (if (eq (current-buffer) target-buf) (progn (message &quot;switching to other buffer&quot;) (switch-to-buffer nil)) (progn (message &quot;switching back...&quot;) (switch-to-buffer buffer-name) (when switch-cont (funcall switch-cont)))) (message &quot;creating buffer...&quot;) (funcall buffer-create-fn) (when switch-cont (funcall switch-cont)))))) For instance, if you do: (global-set-key (kbd &quot;C-h C-SPC&quot;) (make-toggle-function &quot;<em>scratch</em>&quot; (lambda ()))) Then a <code>C-h C-SPC</code> quickly gets you to the scratch buffer, and a second one dismisses it. The <em>run</em> part is useful with something like eshell: <code>(global-set-key (kbd &quot;s-s&quot;) (make-toggle-function &quot;*eshell*&quot; (lambda () (progn (eshell) (end-of-buffer))) (lambda () (progn (eshell/cd (default-directory)) ‏‏‎ (end-of-buffer)))))</code> Here, a super-s (I use EXWM so super is always available) gets you to an eshell buffer, creating if it didn&#39;t exist, and switches the dir to the cwd. Speaking of EXWM, this is <em>very</em> useful to use on your programs in EXWM. For instance I have Firefox bound to one of the Fn keys via a make-toggle-function. That&#39;s all! Nothing revolutionary but it has saved me a lot of time and workflow disruption by not fumbling through my buffers ;-)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/Icy_Egg9244"> /u/Icy_Egg9244 </a> <br/> <span><a href="https://www.reddit.com/r/emacs/comments/scki8i/one_of_the_most_useful_small_lisp_functions_in_my/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/emacs/comments/scki8i/one_of_the_most_useful_small_lisp_functions_in_my/">[comments]</a></span>