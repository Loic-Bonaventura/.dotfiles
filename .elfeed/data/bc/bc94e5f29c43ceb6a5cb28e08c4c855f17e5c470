<!-- SC_OFF --><div class="md"><p>It&#39;s just a short snippet in case you need to browse an SQL dump. It makes the dump more readable by adding field names as comments which can be helpful with tables having lots of fields. It needs to be a dump which contains field names too.</p> <p>Here&#39;s an example with a trivial table. </p> <p>The original dump:</p> <pre><code>INSERT INTO `student` (`id`, `name`, `class`, `mark`, `gender`) VALUES (1, &#39;John Deo&#39;, &#39;Four&#39;, 75, &#39;female&#39;), (2, &#39;Max Ruin&#39;, &#39;Three&#39;, 85, &#39;male&#39;), (3, &#39;Arnold&#39;, &#39;Three&#39;, 55, &#39;male&#39;), ... </code></pre> <p>the converted dump:</p> <pre><code>INSERT INTO `student` (`id`, `name`, `class`, `mark`, `gender`) VALUES ( /* id */ 1, /* name */ &#39;John Deo&#39;, /* class */ &#39;Four&#39;, /* mark */ 75, /* gender */ &#39;female&#39;), ( /* id */ 2, /* name */ &#39;Max Ruin&#39;, /* class */ &#39;Three&#39;, /* mark */ 85, /* gender */ &#39;male&#39;), ( /* id */ 3, /* name */ &#39;Arnold&#39;, /* class */ &#39;Three&#39;, /* mark */ 55, /* gender */ &#39;male&#39;), ... </code></pre> <p>The code:</p> <pre><code>(save-excursion (goto-char (point-min)) (while (re-search-forward &quot;) VALUES&quot; nil t) (beginning-of-line) (search-forward &quot;(&quot;) (let ((start (point)) fields) (while (not (eq ?\) (char-after))) (forward-sexp) (push (buffer-substring-no-properties start (point)) fields) (skip-syntax-forward &quot;. &quot;) (setq start (point))) (setq fields (mapcar (lambda (field) (substring field 1 -1)) (reverse fields))) (while (progn (search-forward &quot;(&quot;) (let ((fields fields)) ;; make a copy (while (not (eq ?\) (char-after))) (insert (concat &quot; /* &quot; (pop fields) &quot; */ &quot;)) (forward-sexp) (if (looking-at &quot;,&quot;) (forward-char 1)) (skip-syntax-forward &quot; &quot;))) (looking-at &quot;),&quot;)))))) </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/ndamee"> /u/ndamee </a> <br/> <span><a href="https://www.reddit.com/r/emacs/comments/scnymd/making_an_sql_dump_more_readable/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/emacs/comments/scnymd/making_an_sql_dump_more_readable/">[comments]</a></span>