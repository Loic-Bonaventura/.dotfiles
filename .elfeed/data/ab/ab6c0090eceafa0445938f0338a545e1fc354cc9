<!-- SC_OFF --><div class="md"><p>Let&#39;s say I have the following macro</p> <pre><code>(defmacro dup (f x) &quot;Call F by applying X twice.&quot; (if (symbolp f) (list f x x) (append f (list x x)))) </code></pre> <p>It does work:</p> <pre><code>(dup concat &quot;me&quot;) ; &quot;meme&quot; (dup (concat &quot;nice &quot;) &quot;me&quot;) ; &quot;nice meme&quot; </code></pre> <p>However, it has some undesireable behaviour:</p> <pre><code>(macroexpand &#39;(dup some-function (long (composition x)))) ; (some-function (long (composition x)) (long (composition x))) </code></pre> <p>How do I make a macro that evaluates X once? I understand I could do it with a function, but I like that I don&#39;t have to quote things in a macro.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/flora_best_maid"> /u/flora_best_maid </a> <br/> <span><a href="https://www.reddit.com/r/emacs/comments/sdt8z7/how_do_i_make_a_macro_that_evaluates_an_argument/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/emacs/comments/sdt8z7/how_do_i_make_a_macro_that_evaluates_an_argument/">[comments]</a></span>